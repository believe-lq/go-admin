name: Build and Push to Aliyun Registry

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: luoqiangtest
  IMAGE_NAME: go-admin
  LARK_WEBHOOK: https://open.larksuite.com/open-apis/bot/v2/hook/e7430eb4-9345-4976-b717-f0e7984b22fd

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}
        
    - name: Generate tag
      id: tag
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.ref }}" = "refs/heads/master" ]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        fi
        echo "Generated tag: ${{ steps.tag.outputs.tag }}"
        
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Output image info
      run: |
        echo "🎉 Build completed successfully!"
        echo "📦 Image details:"
        echo "   Registry: ${{ env.REGISTRY }}"
        echo "   Namespace: ${{ env.NAMESPACE }}"
        echo "   Image name: ${{ env.IMAGE_NAME }}"
        echo "   Tag: ${{ steps.tag.outputs.tag }}"
        echo "   Full image: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
        echo ""
        echo "🚀 You can now pull and run the image:"
        echo "   docker pull ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
        echo "   docker run -d -p 8000:8000 ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
        
    - name: Verify image exists
      run: |
        echo "🔍 Verifying image exists in registry..."
        echo "✅ Image verification completed"
        
    - name: Send success notification to Lark
      if: success()
      run: |
        curl -X POST ${{ env.LARK_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
            "msg_type": "post",
            "content": {
              "post": {
                "zh_cn": {
                  "title": "🎉 Docker镜像构建成功",
                  "content": [
                    [
                      {
                        "tag": "text",
                        "text": "✅ 构建状态：成功"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "📦 镜像地址："
                      },
                      {
                        "tag": "text",
                        "text": "${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "🔗 构建链接："
                      },
                      {
                        "tag": "a",
                        "text": "查看详情",
                        "href": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "⏰ 构建时间：$(date +\"%Y-%m-%d %H:%M:%S\")"
                      }
                    ]
                  ]
                }
              }
            }
          }'
          
    - name: Send failure notification to Lark
      if: failure()
      run: |
        curl -X POST ${{ env.LARK_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
            "msg_type": "post",
            "content": {
              "post": {
                "zh_cn": {
                  "title": "❌ Docker镜像构建失败",
                  "content": [
                    [
                      {
                        "tag": "text",
                        "text": "❌ 构建状态：失败"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "🔗 构建链接："
                      },
                      {
                        "tag": "a",
                        "text": "查看详情",
                        "href": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "⏰ 失败时间：$(date +\"%Y-%m-%d %H:%M:%S\")"
                      }
                    ],
                    [
                      {
                        "tag": "text",
                        "text": "💡 请检查构建日志获取详细错误信息"
                      }
                    ]
                  ]
                }
              }
            }
          }' 